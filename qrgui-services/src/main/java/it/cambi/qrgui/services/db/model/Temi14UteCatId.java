package it.cambi.qrgui.services.db.model;
// Generated Apr 10, 2018 11:58:47 AM by Hibernate Tools 3.6.0.Final

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.GeneratedValue;
import javax.persistence.SequenceGenerator;

/**
 * Temi14UteCatId generated by hbm2java
 */
@Embeddable
public class Temi14UteCatId implements java.io.Serializable
{

    private long cat;
    private Date insCat;

    public Temi14UteCatId()
    {
    }

    public Temi14UteCatId(long cat, Date insCat)
    {
        this.cat = cat;
        this.insCat = insCat;
    }

    @SequenceGenerator(name = "ttps14generator", sequenceName = "EMIA.SEMI14_ANA_CAT", allocationSize = 1)
    @GeneratedValue(strategy = SEQUENCE, generator = "ttps14generator")
    @Column(name = "C_CAT", nullable = false, precision = 10, scale = 0)
    public long getCat()
    {
        return this.cat;
    }

    public void setCat(long cat)
    {
        this.cat = cat;
    }

    @Column(name = "D_INS_CAT", nullable = false, length = 7)
    public Date getInsCat()
    {
        return this.insCat;
    }

    public void setInsCat(Date insCat)
    {
        this.insCat = insCat;
    }

    public boolean equals(Object other)
    {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof Temi14UteCatId))
            return false;
        Temi14UteCatId castOther = (Temi14UteCatId) other;

        return (this.getCat() == castOther.getCat())
                && ((this.getInsCat() == castOther.getInsCat())
                        || (this.getInsCat() != null && castOther.getInsCat() != null && this.getInsCat().equals(castOther.getInsCat())));
    }

    public int hashCode()
    {
        int result = 17;

        result = 37 * result + (int) this.getCat();
        result = 37 * result + (getInsCat() == null ? 0 : this.getInsCat().hashCode());
        return result;
    }

}
